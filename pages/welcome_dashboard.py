import streamlit as st
import pandas as pd
import importlib.util # Para importar m칩dulos din치micamente
import sys # Para a침adir directorios al path de importaci칩n
import os # Para construir rutas de archivo

# Importar funciones de la base de datos de usuarios
from utils.db_ops import init_db, verify_user # Solo necesitamos init_db aqu칤 para asegurar que la BD est치 lista

# Importar funciones para la configuraci칩n de reportes (desde JSON)
from utils.report_config_loader import init_reports_data, get_all_reports_config

# Importar la funci칩n para construir el sidebar
from utils.sidebar_menu_builder import build_collapsible_sidebar_menu

# --- Inicializaci칩n de Base de Datos y Configuraci칩n de Reportes ---
init_db() # Asegura que la BD de usuarios est칠 lista
init_reports_data() # Asegura que el JSON de reportes est칠 listo

# --- Configuraci칩n Inicial del Estado de Sesi칩n para el Contenido del Reporte ---
# Define el marcador para la p치gina de bienvenida.
if 'selected_report_file' not in st.session_state: 
    st.session_state.selected_report_file = "home_page_marker" 

# --- Configuraci칩n General de la P치gina Streamlit ---
st.set_page_config(
    page_title="Dashboard Principal - Perrini",
    page_icon="游늵",
    layout="wide", 
    initial_sidebar_state="expanded" # Queremos el sidebar EXPANDIDO por defecto aqu칤
)

# --- CSS para OCULTAR el footer y el header predeterminados de Streamlit ---
# NOTA: NO hay reglas aqu칤 para ocultar el sidebar principal ni el bot칩n de hamburguesa.
# Es crucial que Streamlit los maneje para la funcionalidad de expandir/colapsar.
hide_elements_css = """
    <style>
        footer {visibility: hidden;} /* Oculta el footer "Made with Streamlit" */
        header {visibility: hidden;} /* Oculta el encabezado de Streamlit */
    </style>
"""
st.markdown(hide_elements_css, unsafe_allow_html=True)

# --- Carga y Aplica el CSS Externo (styles/main.css) ---
# Aqu칤 es donde se cargar치n tus estilos personalizados, incluyendo la ocultaci칩n del stSidebarNav.
css_file_path = os.path.join("styles", "main.css")
try:
    with open(css_file_path, "r", encoding="utf-8") as f:
        custom_styles_css = f.read()
    st.markdown(f"<style>{custom_styles_css}</style>", unsafe_allow_html=True)
except FileNotFoundError:
    st.error(f"Error: No se encontr칩 el archivo de estilos CSS en '{css_file_path}'.")
    st.warning("Aseg칰rate de que el archivo 'main.css' est치 en la carpeta 'styles/' en la ra칤z del proyecto.")


# --- L칩gica de Seguridad: Redirigir si no est치 logueado ---
# Si el usuario NO est치 logueado en la sesi칩n, lo redirigimos a la p치gina de login.
if 'logged_in' not in st.session_state or not st.session_state.logged_in:
    st.error("No has iniciado sesi칩n. Redirigiendo a la p치gina de acceso...")
    st.switch_page("mi_app.py") # Redirige al login si no est치 autenticado
    st.stop() # Detiene la ejecuci칩n para evitar mostrar contenido no autorizado


# --- L칩gica de la Barra Lateral (Sidebar) ---
# Construye el men칰 personalizado del sidebar.
build_collapsible_sidebar_menu() 

# --- Funci칩n para Mostrar el Mensaje de Bienvenida ---
def display_home_page_content():
    st.title(f"游녦 춰Bienvenido al Dashboard Principal, {st.session_state.username}!")
    st.write("Esta es tu plataforma centralizada para explorar todos tus an치lisis de datos.")
    st.markdown("---")
    st.info("Para comenzar, por favor, selecciona un reporte de la **lista en el men칰 lateral de la izquierda**.")
    st.write("Puedes navegar entre diferentes grupos y reportes, y el contenido se cargar치 aqu칤 mismo.")
    st.image("https://placehold.co/800x400/80C0D0/FFFFFF?text=Selecciona+un+Reporte",
             caption="Tu informaci칩n est치 a solo un clic de distancia.")


# --- Renderizado del Contenido (Dashboard o Reporte Seleccionado) ---
st.markdown("---") # Separador visual para el contenido principal

# Si 'selected_report_file' es nuestro marcador, mostramos la p치gina de inicio.
if st.session_state.selected_report_file == "home_page_marker":
    display_home_page_content()
# Si hay un nombre de archivo de reporte seleccionado en la sesi칩n, intentamos cargarlo.
elif st.session_state.selected_report_file:
    report_content_dir = "report_content" # Ruta a la carpeta de contenido de reportes

    # A침adir la carpeta al path de importaci칩n de Python si no est치
    if report_content_dir not in sys.path:
        sys.path.append(report_content_dir)

    try:
        module_name = st.session_state.selected_report_file.replace(".py", "")
        # Cargamos el m칩dulo din치micamente desde report_content
        spec = importlib.util.spec_from_file_location(module_name, os.path.join(report_content_dir, st.session_state.selected_report_file))
        if spec and spec.loader:
            report_module = importlib.util.module_from_spec(spec)
            sys.modules[module_name] = report_module # A침adir al sys.modules para que pueda ser importado
            spec.loader.exec_module(report_module)

            # Verificar si el m칩dulo tiene la funci칩n 'render_content' y llamarla
            if hasattr(report_module, 'render_content') and callable(report_module.render_content):
                report_module.render_content()
            else:
                st.error(f"Error: El archivo {st.session_state.selected_report_file} no tiene la funci칩n 'render_content()'.")
        else:
            st.error(f"Error: No se pudo cargar la especificaci칩n para {st.session_state.selected_report_file}.")
            st.warning(f"Aseg칰rate de que el archivo '{st.session_state.selected_report_file}' existe en la carpeta '{report_content_dir}/'.")

    except FileNotFoundError:
        st.error(f"Error: El archivo de reporte '{st.session_state.selected_report_file}' no fue encontrado en '{report_content_dir}/'.")
        st.warning("Verifica que el nombre del archivo en 'reports_config.json' coincide con el nombre real en la carpeta 'report_content/'.")
    except Exception as e:
        st.error(f"Ocurri칩 un error al cargar o renderizar el reporte: {e}")
        st.warning("Aseg칰rate de que no haya errores de sintaxis en el archivo del reporte.")

else:
    # Esto se mostrar치 si st.session_state.selected_report_file es None o no es v치lido
    st.info("Por favor, selecciona un reporte para empezar.")
    display_home_page_content() # Muestra el mensaje de bienvenida como fallback

